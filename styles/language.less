.comment {
	color: @light-grey;
}

.constant {
	color: @yellow;
}

.entity {
	color: @orange;
}

.keyword {
	color: @yellow;
}

.storage {
	color: @yellow;
}

.string, .meta.verbatim {
	color: @green;
}

.support {
	color: @blue;
}

.variable {
}

.invalid.deprecated {
	font-style: italic;
	color: @red;
}

.invalid.illegal {
	color: @off-white;
	background-color: @red;
}

.entity.other.inherited-class {
	font-style: italic;
	color: @light-orange;
}

.string .constant.other.placeholder {
	color: @light-orange;
}

.meta.function-call.py {
	color: @light-blue;
}

.meta.tag {
  color: @mid-blue;
}

.meta.tag .entity {
	color: @dark-blue;
}

.entity.name.section {
	color: @white;
}

.keyword.type.variant {
	color: @light-blue;
}

.source.ocaml .keyword.operator.symbol {
	color: @off-white;
}

.source.ocaml .keyword.operator.symbol.infix {
	color: @dark-blue;
}

.source.ocaml .keyword.operator.symbol.prefix {
	color: @dark-blue;
}

.source.ocaml .keyword.operator.symbol.infix.floating-point {
	text-decoration: underline;
}

.source.ocaml .keyword.operator.symbol.prefix.floating-point {
	text-decoration: underline;
}

.source.ocaml .constant.numeric.floating-point {
	text-decoration: underline;
}

.text.tex.latex .meta.function.environment {
	background-color: rgba(255, 255, 255, 0.03);
}

.text.tex.latex .meta.function.environment .meta.function.environment {
	background-color: rgba(122, 150, 250, 0.03);
}

.text.tex.latex .support.function {
	color: @yellow;
}

.source.plist .string.unquoted, .source.plist .keyword.operator {
	color: @white;
}
